<?php

define('SERVER_MANAGEMENT_CONNECT_TEST', 'test');
define('SERVER_MANAGEMENT_CONNECT_ACTUAL', 'actual');
define('SERVER_MANAGEMENT_CONNECT_FORCE', 'force');

function _server_management_connect_config($type = NULL) {
  $settings = variable_get('server_management_connect', array(
    'central_link' => '',
    'machine_name' => '',
    'access_key' => '',
    'delay' => 1800,
    'enabled' => 0,
    'last_executed' => 0,
  ));
  if (empty($settings['machine_name'])) {
    return array();
  }
  $server = server_management_load_by_name($settings['machine_name']);
  if (empty($server)) {
    return array();
  }
  return _server_management_connect_find_config($server, $type);
}

function _server_management_connect_find_config($server, $type = NULL, $parent = FALSE) {
  $config = array();
  $objects = server_management_config_item_load($server->sid);
  foreach ($objects as $conf) {
    // we want all items from this level, plus all items from parents with the
    // inherit status set to true
    if ((!$parent) || ($conf->inherit)) {
      // if we gave a type, we only want items of that type.
      if (empty($type) || ($type == $conf->type)) {
        $config[$conf->cid] = $conf;
      }
    }
  }
  if (!empty($server->parent_sid)) {
    _server_management_connect_find_config(server_management_load($server->parent_sid), $type, TRUE);
  }
  return $config;
}

function _server_management_connect_process($mode = SERVER_MANAGEMENT_CONNECT_TEST) {
  $settings = variable_get('server_management_connect', array(
    'central_link' => '',
    'machine_name' => '',
    'access_key' => '',
    'delay' => 1800,
    'enabled' => 0,
    'last_executed' => 0,
  ));
  if (_server_management_connect_validate($settings, $mode)) {
    if ($mode == SERVER_MANAGEMENT_CONNECT_TEST) {
      module_load_include('inc', 'twoway', 'services/twoway.enabled');
      $results = twoway_invoke_enabled($settings['central_link']);
      if ($results == 'success') {
        drupal_set_message(t('Successfully connected to test server'));
      } else {
        if (!empty($results)) {
          drupal_set_message(t($results), 'error');
        } else {
          drupal_set_message(t('Failed to connect to test server'), 'error');
        }
      }
    } else {
      if ($mode == SERVER_MANAGEMENT_CONNECT_FORCE ||
          ($mode == SERVER_MANAGEMENT_CONNECT_ACTUAL &&
          (time() < ($settings['last_executed'] + $settings['delay'])))) {
        if (_server_management_request_server_variables($settings)) {
          $message = 'Server configurations requested';
        } else {
          $message = 'Server configuration request failed';
        }
        if ($mode == SERVER_MANAGEMENT_CONNECT_FORCE) {
          drupal_set_message(t($message));
        } else {
          watchdog('server_management_connect', $message, array(), WATCHDOG_DEBUG);
        }
      }
    }
  }
}

function _server_management_request_server_variables($settings) {
  module_load_include('inc', 'server_management', 'services/server_management.server_connect');
  $results = server_management_service_invoke_server_connect(
      $settings['central_link'],
      $settings['machine_name'],
      $settings['access_key']);
  if ($results) {
    $settings['last_executed'] = time();
    variable_set('server_management_connect', $settings);
  }
  return $results;
}

function _server_management_connect_validate($settings, $mode) {
  $error = FALSE;
  if (empty($settings['central_link'])) {
    $error = 'No link to central provided.';
  }
  if (empty($settings['machine_name'])) {
    $error = 'No machine name for this server provided.';
  }
  if (empty($settings['access_key'])) {
    $error = 'No access key for this server provided.';
  }
  if ($mode != SERVER_MANAGEMENT_CONNECT_TEST) {
    if (empty($settings['enabled'])) {
      $error = 'Server connect is not enabled';
    }
  }
  if ($error) {
    if ($mode == SERVER_MANAGEMENT_CONNECT_ACTUAL) {
      watchdog('server_management_connect', $error, array(), WATCHDOG_ERROR);
    } else {
      drupal_set_message(t($error), 'warning');
    }
    return FALSE;
  }
  return TRUE;
}

function server_management_connect_menu() {
  return array(
    'admin/config/system/server_connect' => array(
      'title' => 'Server Connect',
      'description' => 'Manage your connection to our central server',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('server_management_connect_config_form'),
      'access arguments' => array('server management connect'),
      'file' => 'server_management_connect.admin.inc',
    ),
  );
}

function server_management_connect_permission() {
  return array(
    'server management connect' => array(
      'title' => t('Server Connect'),
      'description' => t('Administer server connect'),
      'restrict access' => TRUE,
    ),
  );
}

